{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zepingchen/Desktop/covid-tracker/src/components/Map.js\";\nimport React from \"react\";\nimport { MapContainer as LeafletMap, TileLayer, Circle } from \"react-leaflet\";\nimport { showDataOnMap } from \"./util.js\";\nimport ChangeView from \"./ChangeView.js\";\nimport \"./Map.css\";\n\nfunction Map(props) {\n  var _props$countries;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(LeafletMap, {\n      center: props.center,\n      zoom: props.zoom,\n      children: [/*#__PURE__*/_jsxDEV(ChangeView, {\n        center: props.center,\n        zoom: props.zoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), (_props$countries = props.countries) === null || _props$countries === void 0 ? void 0 : _props$countries.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n        center: [country.countryInfo.lat, country.countryInfo.long],\n        radius: Math.sqrt(country.cases) * 2000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Map;\nexport default Map; // {showDataOnMap(props.countries, \"cases\")}\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/zepingchen/Desktop/covid-tracker/src/components/Map.js"],"names":["React","MapContainer","LeafletMap","TileLayer","Circle","showDataOnMap","ChangeView","Map","props","center","zoom","countries","map","country","countryInfo","lat","long","Math","sqrt","cases"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAY,IAAIC,UAAzB,EAAqCC,SAArC,EAAgDC,MAAhD,QAA6D,eAA7D;AACA,SAAQC,aAAR,QAA4B,WAA5B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAElB,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEA,KAAK,CAACC,MAA1B;AAAkC,MAAA,IAAI,EAAED,KAAK,CAACE,IAA9C;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEF,KAAK,CAACC,MAA1B;AAAkC,QAAA,IAAI,EAAED,KAAK,CAACE;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,GAAG,EAAC,oDADN;AAEE,QAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cAFF,sBAMGF,KAAK,CAACG,SANT,qDAMG,iBAAiBC,GAAjB,CAAqBC,OAAO,iBAC3B,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CAAhB;AAAqE,QAAA,MAAM,EAAEC,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACM,KAAlB,IAA2B;AAAxG;AAAA;AAAA;AAAA;AAAA,cADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAhBQZ,G;AAkBT,eAAeA,GAAf,C,CAEA","sourcesContent":["import React from \"react\"\nimport { MapContainer as LeafletMap, TileLayer, Circle} from \"react-leaflet\"\nimport {showDataOnMap} from \"./util.js\"\nimport ChangeView from \"./ChangeView.js\"\nimport \"./Map.css\"\n\nfunction Map(props) {\n\n  return (\n    <div className=\"map\">\n      <LeafletMap center={props.center} zoom={props.zoom}>\n        <ChangeView center={props.center} zoom={props.zoom} />\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {props.countries?.map(country => (\n          <Circle center={[country.countryInfo.lat, country.countryInfo.long]} radius={Math.sqrt(country.cases) * 2000} />\n        ))}\n      </LeafletMap>\n    </div>\n  )\n}\n\nexport default Map\n\n// {showDataOnMap(props.countries, \"cases\")}\n"]},"metadata":{},"sourceType":"module"}
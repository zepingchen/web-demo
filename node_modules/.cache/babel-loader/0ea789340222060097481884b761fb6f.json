{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zepingchen/Desktop/covid-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header.js\";\nimport InfoBox from \"./components/InfoBox.js\";\nimport Map from \"./components/Map.js\";\nimport Panel from \"./components/Panel.js\";\nimport { FormControl, Select, MenuItem, Card, CardContent } from \"@material-ui/core\";\nimport \"./App.css\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [updates, setUpdates] = useState(\"\");\n  const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\n  useEffect(() => {\n    const targetURL = \"https://disease.sh/v3/covid-19/countries\";\n\n    const getCountries = async () => {\n      await fetch(proxyURL + targetURL).then(response => response.json()).then(data => {\n        setCountries(data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        })));\n      });\n    };\n\n    const getAll = async () => {\n      await fetch(proxyURL + targetURL).then(response => response.json()).then(data => {\n        console.log(data);\n        setUpdates({\n          cases: data.cases,\n          todayCases: data.todayCases,\n          deaths: data.deaths,\n          todayDeaths: data.todayDeaths,\n          recovered: data.recovered,\n          todayRecovered: data.todayRecovered\n        });\n      });\n    };\n\n    getCountries();\n  }, []);\n\n  const onCountryChange = event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    var targetURL = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    const getCountryData = async () => {\n      await fetch(proxyURL + targetURL).then(response => response.json()).then(data => {\n        console.log(data);\n        setUpdates({\n          cases: data.cases,\n          todayCases: data.todayCases,\n          deaths: data.deaths,\n          todayDeaths: data.todayDeaths,\n          recovered: data.recovered,\n          todayRecovered: data.todayRecovered\n        });\n      });\n    };\n\n    getCountryData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is the covid tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app-dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus cases\",\n          newCases: updates.todayCases,\n          total: updates.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          newCases: updates.todayRecovered,\n          total: updates.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          newCases: updates.todayDeaths,\n          total: updates.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"right-panel\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fgiL4mLR99LGg4bfwlO3VLbGEHw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/zepingchen/Desktop/covid-tracker/src/App.js"],"names":["React","useState","useEffect","Header","InfoBox","Map","Panel","FormControl","Select","MenuItem","Card","CardContent","App","countries","setCountries","country","setCountry","updates","setUpdates","proxyURL","targetURL","getCountries","fetch","then","response","json","data","map","name","value","countryInfo","iso2","getAll","console","log","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","onCountryChange","event","countryCode","target","getCountryData"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport Header from \"./components/Header.js\"\nimport InfoBox from \"./components/InfoBox.js\"\nimport Map from \"./components/Map.js\"\nimport Panel from \"./components/Panel.js\"\nimport {FormControl, Select, MenuItem, Card, CardContent} from \"@material-ui/core\"\nimport \"./App.css\"\n\nfunction App() {\n\n  const [countries, setCountries] = useState([])\n  const [country, setCountry] = useState(\"worldwide\")\n  const [updates, setUpdates] = useState(\"\")\n  const proxyURL = \"https://cors-anywhere.herokuapp.com/\"\n\n  useEffect(()=> {\n    const targetURL = \"https://disease.sh/v3/covid-19/countries\"\n    const getCountries = async () => {\n      await fetch(proxyURL + targetURL)\n      .then(response => response.json())\n      .then(data => {\n        setCountries(data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        })))\n      })\n    }\n\n    const getAll = async () => {\n      await fetch(proxyURL + targetURL)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        setUpdates({\n          cases: data.cases,\n          todayCases: data.todayCases,\n          deaths: data.deaths,\n          todayDeaths: data.todayDeaths,\n          recovered: data.recovered,\n          todayRecovered: data.todayRecovered\n        })\n      })\n    }\n    getCountries()\n  },[])\n\n  const onCountryChange = (event) => {\n    const countryCode = event.target.value\n    setCountry(countryCode)\n\n    var targetURL = countryCode === \"worldwide\"? \"https://disease.sh/v3/covid-19/all\"\n    : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n    const getCountryData = async () => {\n      await fetch(proxyURL + targetURL)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        setUpdates({\n          cases: data.cases,\n          todayCases: data.todayCases,\n          deaths: data.deaths,\n          todayDeaths: data.todayDeaths,\n          recovered: data.recovered,\n          todayRecovered: data.todayRecovered\n        })\n      })\n    }\n    getCountryData()\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"left-panel\">\n        <div className=\"header\">\n          <h1>This is the covid tracker</h1>\n          <FormControl className=\"app-dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map(country => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app-stats\">\n          <InfoBox title=\"Coronavirus cases\" newCases={updates.todayCases} total={updates.cases} />\n          <InfoBox title=\"Recovered\" newCases={updates.todayRecovered} total={updates.recovered} />\n          <InfoBox title=\"Deaths\" newCases={updates.todayDeaths} total={updates.deaths} />\n        </div>\n\n        <div className=\"map\">\n          <Map />\n        </div>\n      </div>\n\n      <Card className=\"right-panel\">\n        <CardContent>\n          <h3>Live cases by Country</h3>\n          <h3>Worldwide new cases</h3>\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
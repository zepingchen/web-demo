{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zepingchen/Desktop/covid-tracker/src/components/util.js\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000\n  }\n}; //Draw circles on the map\n\nexport const showDataOnMap = (data, caseType = \"cases\") => {\n  data.map(country => {\n    /*#__PURE__*/\n    _jsxDEV(Circle, {\n      children: [\"center=\", [country.countryInfo.lat, country.countryInfo.long], \"fillOpacity=\", 0.4, \"color=\", casesTypeColors[caseType].hex, \"fillColor=\", casesTypeColors[caseType].hex, \"radius=\", Math.sqrt(country[caseType] * casesTypeColors[caseType].multiplier), /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"I am a popup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this);\n  });\n};","map":{"version":3,"sources":["/Users/zepingchen/Desktop/covid-tracker/src/components/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","showDataOnMap","data","caseType","map","country","countryInfo","lat","long","Math","sqrt"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,eAA5B;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,SADA;AAELC,IAAAA,GAAG,EAAE,kBAFA;AAGLC,IAAAA,OAAO,EAAE,wBAHJ;AAILC,IAAAA,UAAU,EAAE;AAJP,GADe;AAOtBC,EAAAA,SAAS,EAAE;AACTJ,IAAAA,GAAG,EAAE,SADI;AAETC,IAAAA,GAAG,EAAE,mBAFI;AAGTC,IAAAA,OAAO,EAAE,yBAHA;AAITC,IAAAA,UAAU,EAAE;AAJH,GAPW;AAatBE,EAAAA,MAAM,EAAE;AACNL,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,GAAG,EAAE,kBAFC;AAGNC,IAAAA,OAAO,EAAE,wBAHH;AAINC,IAAAA,UAAU,EAAE;AAJN;AAbc,CAAxB,C,CAqBA;;AACA,OAAO,MAAMG,aAAa,GAAG,CAACC,IAAD,EAAOC,QAAQ,GAAG,OAAlB,KAA8B;AACzDD,EAAAA,IAAI,CAACE,GAAL,CAASC,OAAO,IAAI;AAClB;AAAA,YAAC,MAAD;AAAA,4BACU,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADV,kBAEe,GAFf,YAGSf,eAAe,CAACU,QAAD,CAAf,CAA0BR,GAHnC,gBAIaF,eAAe,CAACU,QAAD,CAAf,CAA0BR,GAJvC,aAMIc,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,QAAD,CAAP,GAAoBV,eAAe,CAACU,QAAD,CAAf,CAA0BL,UAAxD,CANJ,eAQE,QAAC,KAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAYD,GAbD;AAcD,CAfM","sourcesContent":["import React from \"react\"\nimport numeral from \"numeral\"\nimport {Circle, Popup} from \"react-leaflet\"\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000,\n  },\n}\n\n//Draw circles on the map\nexport const showDataOnMap = (data, caseType = \"cases\") => {\n  data.map(country => {\n    <Circle>\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      fillOpacity={0.4}\n      color={casesTypeColors[caseType].hex}\n      fillColor={casesTypeColors[caseType].hex}\n      radius={\n        Math.sqrt(country[caseType] * casesTypeColors[caseType].multiplier)\n      }\n      <Popup>\n        <h1>I am a popup</h1>\n      </Popup>\n    </Circle>\n  })\n}\n"]},"metadata":{},"sourceType":"module"}
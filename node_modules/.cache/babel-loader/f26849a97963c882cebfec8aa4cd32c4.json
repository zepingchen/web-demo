{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zepingchen/Desktop/covid-tracker/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nfunction Table() {\n  _s();\n\n  const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\n  useEffect(() => {\n    const targetURL = \"https://disease.sh/v3/covid-19/countries\";\n\n    const getCountries = async () => {\n      await fetch(proxyURL + targetURL).then(response => response.json()).then(data => {\n        setCountries(data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        })));\n      });\n    };\n\n    getCountries();\n  }, []);\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 50\n  }, {\n    field: 'countryName',\n    headerName: 'Country',\n    type: 'number',\n    width: 130\n  }, {\n    field: 'cases',\n    headerName: 'Cases',\n    width: 130\n  }];\n  const rows = [{\n    id: 1,\n    countryName: 'Snow',\n    cases: 13234\n  }, {\n    id: 2,\n    countryName: 'Lannister',\n    cases: 3434\n  }, {\n    id: 3,\n    countryName: 'Lannister',\n    cases: 212\n  }, {\n    id: 4,\n    countryName: 'Stark',\n    cases: 24434533\n  }, {\n    id: 5,\n    countryName: 'Targaryen',\n    cases: 31323\n  }, {\n    id: 6,\n    countryName: 'Melisandre',\n    cases: 23131\n  }, {\n    id: 7,\n    countryName: 'Clifford',\n    cases: 3131\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/zepingchen/Desktop/covid-tracker/src/components/Table.js"],"names":["React","useState","useEffect","DataGrid","Table","proxyURL","targetURL","getCountries","fetch","then","response","json","data","setCountries","map","country","name","value","countryInfo","iso2","columns","field","headerName","width","type","rows","id","countryName","cases","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEf,QAAMC,QAAQ,GAAG,sCAAjB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,SAAS,GAAG,0CAAlB;;AACA,UAAMC,YAAY,GAAG,YAAY;AAC/B,YAAMC,KAAK,CAACH,QAAQ,GAAGC,SAAZ,CAAL,CACLG,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAG,IAAI,IAAI;AACZC,QAAAA,YAAY,CAACD,IAAI,CAACE,GAAL,CAASC,OAAO,KAAK;AAChCC,UAAAA,IAAI,EAAED,OAAO,CAACA,OADkB;AAEhCE,UAAAA,KAAK,EAAEF,OAAO,CAACG,WAAR,CAAoBC;AAFK,SAAL,CAAhB,CAAD,CAAZ;AAID,OAPK,CAAN;AAQD,KATD;;AAUAZ,IAAAA,YAAY;AACb,GAbQ,EAaN,EAbM,CAAT;AAgBA,QAAMa,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE,IAA3B;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GADc,EAEd;AAAEF,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,UAAU,EAAE,SAApC;AAA+CE,IAAAA,IAAI,EAAE,QAArD;AAA+DD,IAAAA,KAAK,EAAE;AAAtE,GAFc,EAGd;AAAEF,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,UAAU,EAAE,OAA9B;AAAuCC,IAAAA,KAAK,EAAE;AAA9C,GAHc,CAAhB;AAMA,QAAME,IAAI,GAAG,CACX;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,MAAtB;AAA8BC,IAAAA,KAAK,EAAE;AAArC,GADW,EAEX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,WAAtB;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GAFW,EAGX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,WAAtB;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GAHW,EAIX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,OAAtB;AAA+BC,IAAAA,KAAK,EAAE;AAAtC,GAJW,EAKX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,WAAtB;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GALW,EAMX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,YAAtB;AAAoCC,IAAAA,KAAK,EAAE;AAA3C,GANW,EAOX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,WAAW,EAAE,UAAtB;AAAkCC,IAAAA,KAAK,EAAE;AAAzC,GAPW,CAAb;AAWA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeN,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEE,IAAhB;AAAsB,MAAA,OAAO,EAAEL,OAA/B;AAAwC,MAAA,QAAQ,EAAE,CAAlD;AAAqD,MAAA,iBAAiB;AAAtE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1CQhB,K;;KAAAA,K;AA4CT,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nfunction Table() {\n\n  const proxyURL = \"https://cors-anywhere.herokuapp.com/\"\n\n  useEffect(() => {\n    const targetURL = \"https://disease.sh/v3/covid-19/countries\"\n    const getCountries = async () => {\n      await fetch(proxyURL + targetURL)\n      .then(response => response.json())\n      .then(data => {\n        setCountries(data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        })))\n      })\n    }\n    getCountries()\n  }, [])\n\n\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 50 },\n    { field: 'countryName', headerName: 'Country', type: 'number', width: 130 },\n    { field: 'cases', headerName: 'Cases', width: 130 },\n  ];\n\n  const rows = [\n    { id: 1, countryName: 'Snow', cases: 13234},\n    { id: 2, countryName: 'Lannister', cases: 3434},\n    { id: 3, countryName: 'Lannister', cases: 212},\n    { id: 4, countryName: 'Stark', cases: 24434533},\n    { id: 5, countryName: 'Targaryen', cases: 31323},\n    { id: 6, countryName: 'Melisandre', cases: 23131},\n    { id: 7, countryName: 'Clifford', cases: 3131},\n  ];\n\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n    </div>\n  )\n}\n\nexport default Table\n"]},"metadata":{},"sourceType":"module"}
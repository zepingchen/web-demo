{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zepingchen/Desktop/covid-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header.js\";\nimport InfoBox from \"./components/InfoBox.js\";\nimport Map from \"./components/Map.js\";\nimport { FormControl, Select, MenuItem, Card, CardContent } from \"@material-ui/core\";\nimport Table from \"./components/Table.js\";\nimport Graph from \"./components/Graph.js\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./App.css\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [updates, setUpdates] = useState({});\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\n\n  const getCountryData = async (targetURL, type) => {\n    await fetch(proxyURL + targetURL).then(response => response.json()).then(data => {\n      setUpdates(data);\n    });\n  };\n\n  useEffect(() => {\n    const targetURL = \"https://disease.sh/v3/covid-19/countries\";\n\n    const getCountries = async () => {\n      await fetch(proxyURL + targetURL).then(response => response.json()).then(data => {\n        setCountries(data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        })));\n      });\n    };\n\n    getCountries();\n    getCountryData(\"https://disease.sh/v3/covid-19/all\", \"default\");\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    var targetURL = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(proxyURL + targetURL).then(response => response.json()).then(data => {\n      setUpdates(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n      console.log(mapZoom);\n    }); // getCountryData(targetURL, \"on-change\")\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is the Covid Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app-dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus cases\",\n          newCases: updates.todayCases,\n          total: updates.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          newCases: updates.todayRecovered,\n          total: updates.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          newCases: updates.todayDeaths,\n          total: updates.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        center: mapCenter,\n        zoom: mapZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"right-panel\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"right-card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Live cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Graph, {\n          caseType: \"cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4b04MaK870QzG8a+YUhBZKbkryo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/zepingchen/Desktop/covid-tracker/src/App.js"],"names":["React","useState","useEffect","Header","InfoBox","Map","FormControl","Select","MenuItem","Card","CardContent","Table","Graph","App","countries","setCountries","country","setCountry","updates","setUpdates","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","proxyURL","getCountryData","targetURL","type","fetch","then","response","json","data","getCountries","map","name","value","countryInfo","iso2","onCountryChange","event","countryCode","target","long","console","log","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAAQC,WAAR,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,IAAvC,EAA6CC,WAA7C,QAA+D,mBAA/D;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,0BAAP;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,WAAD,CAAtC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAE;AAACqB,IAAAA,GAAG,EAAE,QAAN;AAAgBC,IAAAA,GAAG,EAAE,CAAC;AAAtB,GAAF,CAA1C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMyB,QAAQ,GAAG,sCAAjB;;AAEA,QAAMC,cAAc,GAAG,OAAOC,SAAP,EAAkBC,IAAlB,KAA2B;AAChD,UAAMC,KAAK,CAACJ,QAAQ,GAAGE,SAAZ,CAAL,CACLG,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAG,IAAI,IAAI;AACZf,MAAAA,UAAU,CAACe,IAAD,CAAV;AACD,KAJK,CAAN;AAKD,GAND;;AAQAhC,EAAAA,SAAS,CAAC,MAAK;AACb,UAAM0B,SAAS,GAAG,0CAAlB;;AACA,UAAMO,YAAY,GAAG,YAAY;AAC/B,YAAML,KAAK,CAACJ,QAAQ,GAAGE,SAAZ,CAAL,CACLG,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAG,IAAI,IAAI;AACZnB,QAAAA,YAAY,CAACmB,IAAI,CAACE,GAAL,CAASpB,OAAO,KAAK;AAChCqB,UAAAA,IAAI,EAAErB,OAAO,CAACA,OADkB;AAEhCsB,UAAAA,KAAK,EAAEtB,OAAO,CAACuB,WAAR,CAAoBC;AAFK,SAAL,CAAhB,CAAD,CAAZ;AAID,OAPK,CAAN;AAQD,KATD;;AAUAL,IAAAA,YAAY;AACZR,IAAAA,cAAc,CAAC,oCAAD,EAAuC,SAAvC,CAAd;AAED,GAfQ,EAeP,EAfO,CAAT;;AAiBA,QAAMc,eAAe,GAAG,MAAOC,KAAP,IAAiB;AACvC,UAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaN,KAAjC;AACArB,IAAAA,UAAU,CAAC0B,WAAD,CAAV;AAEA,QAAIf,SAAS,GAAGe,WAAW,KAAK,WAAhB,GAA6B,oCAA7B,GACb,4CAA2CA,WAAY,EAD1D;AAGA,UAAMb,KAAK,CAACJ,QAAQ,GAAGE,SAAZ,CAAL,CACLG,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAG,IAAI,IAAI;AACZf,MAAAA,UAAU,CAACe,IAAD,CAAV;AACAb,MAAAA,YAAY,CAAC,CAACa,IAAI,CAACK,WAAL,CAAiBjB,GAAlB,EAAuBY,IAAI,CAACK,WAAL,CAAiBM,IAAxC,CAAD,CAAZ;AACApB,MAAAA,UAAU,CAAC,CAAD,CAAV;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,OAAZ;AACD,KAPK,CAAN,CAPuC,CAgBvC;AACD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,cAAvB;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,UAAhB;AAA2B,YAAA,KAAK,EAAER,OAAlC;AAA2C,YAAA,QAAQ,EAAEyB,eAArD;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEG3B,SAAS,CAACsB,GAAV,CAAcpB,OAAO,iBACpB,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEA,OAAO,CAACsB,KAAzB;AAAA,wBAAiCtB,OAAO,CAACqB;AAAzC;AAAA;AAAA;AAAA;AAAA,oBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,mBAAf;AAAmC,UAAA,QAAQ,EAAEnB,OAAO,CAAC8B,UAArD;AAAiE,UAAA,KAAK,EAAE9B,OAAO,CAAC+B;AAAhF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,WAAf;AAA2B,UAAA,QAAQ,EAAE/B,OAAO,CAACgC,cAA7C;AAA6D,UAAA,KAAK,EAAEhC,OAAO,CAACiC;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,QAAf;AAAwB,UAAA,QAAQ,EAAEjC,OAAO,CAACkC,WAA1C;AAAuD,UAAA,KAAK,EAAElC,OAAO,CAACmC;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAmBE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAEjC,SAAb;AAAwB,QAAA,IAAI,EAAEI;AAA9B;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,sBAAvB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAxFQX,G;;KAAAA,G;AA0FT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport Header from \"./components/Header.js\"\nimport InfoBox from \"./components/InfoBox.js\"\nimport Map from \"./components/Map.js\"\nimport {FormControl, Select, MenuItem, Card, CardContent} from \"@material-ui/core\"\nimport Table from \"./components/Table.js\"\nimport Graph from \"./components/Graph.js\"\nimport \"leaflet/dist/leaflet.css\"\nimport \"./App.css\"\n\nfunction App() {\n\n  const [countries, setCountries] = useState([])\n  const [country, setCountry] = useState(\"worldwide\")\n  const [updates, setUpdates] = useState({})\n  const [mapCenter, setMapCenter] = useState( {lat: 34.80746, lng: -40.4796} )\n  const [mapZoom, setMapZoom] = useState(3)\n  const proxyURL = \"https://cors-anywhere.herokuapp.com/\"\n\n  const getCountryData = async (targetURL, type) => {\n    await fetch(proxyURL + targetURL)\n    .then(response => response.json())\n    .then(data => {\n      setUpdates(data)\n    })\n  }\n\n  useEffect(()=> {\n    const targetURL = \"https://disease.sh/v3/covid-19/countries\"\n    const getCountries = async () => {\n      await fetch(proxyURL + targetURL)\n      .then(response => response.json())\n      .then(data => {\n        setCountries(data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        })))\n      })\n    }\n    getCountries()\n    getCountryData(\"https://disease.sh/v3/covid-19/all\", \"default\")\n\n  },[])\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value\n    setCountry(countryCode)\n\n    var targetURL = countryCode === \"worldwide\"? \"https://disease.sh/v3/covid-19/all\"\n    : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n    await fetch(proxyURL + targetURL)\n    .then(response => response.json())\n    .then(data => {\n      setUpdates(data)\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n      console.log(mapZoom)\n    });\n\n    // getCountryData(targetURL, \"on-change\")\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"left-panel\">\n        <div className=\"header\">\n          <h1>This is the Covid Tracker</h1>\n          <FormControl className=\"app-dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map(country => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app-stats\">\n          <InfoBox title=\"Coronavirus cases\" newCases={updates.todayCases} total={updates.cases} />\n          <InfoBox title=\"Recovered\" newCases={updates.todayRecovered} total={updates.recovered} />\n          <InfoBox title=\"Deaths\" newCases={updates.todayDeaths} total={updates.deaths} />\n        </div>\n\n        <Map center={mapCenter} zoom={mapZoom}/>\n      </div>\n\n      <Card className=\"right-panel\">\n        <CardContent className=\"right-card-container\">\n          <h2>Live cases by Country</h2>\n          <Table />\n          <h2>Worldwide new cases</h2>\n          <Graph caseType=\"cases\"/>\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
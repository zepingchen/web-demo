{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zepingchen/Desktop/covid-tracker/src/components/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        parser: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLine: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nfunction Graph(props) {\n  _s();\n\n  const [data, setData] = useState({});\n  const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\n\n  const getChartData = (data, caseType) => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[caseType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[caseType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    const targetURL = props.countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/historical/all\" : `https://disease.sh/v3/covid-19/historical/${props.countryCode}`;\n\n    const getData = async () => {\n      await fetch(proxyURL + targetURL).then(response => response.json()).then(data => {\n        let chartData = getChartData(data, props.caseType);\n        setData(chartData);\n      });\n    };\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          data: data,\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1032\",\n          fill: false\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Graph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/Users/zepingchen/Desktop/covid-tracker/src/components/Graph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","parser","tooltipFormat","yAxes","gridLine","ticks","callback","index","values","Graph","props","setData","proxyURL","getChartData","caseType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","targetURL","countryCode","getData","fetch","then","response","json","length","datasets","backgroundColor","borderColor","fill"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {Line} from \"react-chartjs-2\"\nimport numeral from \"numeral\"\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\")\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          parser: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLine: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\")\n          },\n        },\n      },\n    ],\n  },\n}\n\nfunction Graph(props) {\n\n  const [data, setData] = useState({})\n  const proxyURL = \"https://cors-anywhere.herokuapp.com/\"\n\n  const getChartData = (data, caseType) => {\n    const chartData = []\n    let lastDataPoint;\n    for(let date in data.cases) {\n      if(lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[caseType][date] - lastDataPoint\n        }\n        chartData.push(newDataPoint)\n      }\n      lastDataPoint = data[caseType][date]\n    }\n    return chartData\n  }\n\n  useEffect(() => {\n    const targetURL = props.countryCode === \"worldwide\"? \"https://disease.sh/v3/covid-19/historical/all\" :\n    `https://disease.sh/v3/covid-19/historical/${props.countryCode}`\n    const getData = async () => {\n      await fetch(proxyURL + targetURL)\n      .then(response => response.json())\n      .then(data => {\n        let chartData = getChartData(data, props.caseType)\n        setData(chartData)\n      })\n    }\n    getData()\n  }, [])\n\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          options={options}\n          data={{\n            datasets: [\n              {\n                data: data,\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1032\",\n                fill: false,\n              }\n            ]\n          }} />\n      )}\n    </div>\n  )\n}\n\nexport default Graph\n"]},"metadata":{},"sourceType":"module"}
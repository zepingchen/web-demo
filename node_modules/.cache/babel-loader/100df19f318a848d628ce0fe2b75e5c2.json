{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zepingchen/Desktop/covid-tracker/src/components/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Line from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLine: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nfunction Graph() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\n\n  const getChartData = (data, caseType = \"cases\") => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[caseType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[caseType][date];\n    }\n\n    console.log(chartData);\n    return chartData;\n  };\n\n  useEffect(() => {\n    const targetURL = \"https://disease.sh/v3/covid-19/historical/all\";\n\n    const getData = async () => {\n      await fetch(proxyURL + targetURL).then(response => response.json()).then(data => {\n        console.log(data);\n        let chartData = getChartData(data);\n        setData(chartData);\n      });\n    };\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"I am a graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          data: data,\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1032\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Graph, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/Users/zepingchen/Desktop/covid-tracker/src/components/Graph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLine","ticks","callback","index","values","Graph","setData","proxyURL","getChartData","caseType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","console","log","targetURL","getData","fetch","then","response","json","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport Line from \"react-chartjs-2\"\nimport numeral from \"numeral\"\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\")\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLine: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\")\n          },\n        },\n      },\n    ],\n  },\n}\n\nfunction Graph() {\n\n  const [data, setData] = useState([])\n  const proxyURL = \"https://cors-anywhere.herokuapp.com/\"\n\n  const getChartData = (data, caseType=\"cases\") => {\n    const chartData = []\n    let lastDataPoint;\n    for(let date in data.cases) {\n      if(lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[caseType][date] - lastDataPoint\n        }\n        chartData.push(newDataPoint)\n      }\n      lastDataPoint = data[caseType][date]\n    }\n    console.log(chartData)\n    return chartData\n  }\n\n  useEffect(() => {\n    const targetURL = \"https://disease.sh/v3/covid-19/historical/all\"\n    const getData = async () => {\n      await fetch(proxyURL + targetURL)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        let chartData = getChartData(data)\n        setData(chartData)\n      })\n    }\n    getData()\n  }, [])\n\n\n  return (\n    <div>\n      <h3>I am a graph</h3>\n      {data?.length > 0 && (\n        <Line\n          options={options}\n          data={{\n            datasets: [\n              {\n                data: data,\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1032\",\n              }\n            ]\n          }} />\n      )}\n    </div>\n  )\n}\n\nexport default Graph\n"]},"metadata":{},"sourceType":"module"}